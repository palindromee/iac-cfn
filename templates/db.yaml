AWSTemplateFormatVersion: '2010-09-09'
Description: 'Database Layer in DB Subnets'

Parameters:
  Environment:
    Type: String
    Description: Environment name (dev/staging/prod)
    Default: dev
    
  ProjectName:
    Type: String
    Description: Project name for resource naming
    Default: project

  DBInstanceType:
    Type: String
    Description: RDS instance type
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
      - db.r5.large
      - db.r5.xlarge

  DBName:
    Type: String
    Description: Database name
    Default: appdb
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBUsername:
    Type: String
    Description: Database master username
    Default: dbadmin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'

  DBPassword:
    Type: String
    Description: Database master password
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters

  AllocatedStorage:
    Type: Number
    Description: Database allocated storage in GB
    Default: 20
    MinValue: 20
    MaxValue: 1000

  BackupRetentionPeriod:
    Type: Number
    Description: Number of days to retain automated backups
    Default: 7
    MinValue: 0
    MaxValue: 35

Conditions:
  IsProd: !Equals [!Ref Environment, 'prod']
  IsMultiAZ: !Or [!Equals [!Ref Environment, 'prod'], !Equals [!Ref Environment, 'staging']]

Resources:
  DBKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub 'KMS Key for ${ProjectName}-${Environment} RDS encryption'
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow RDS Service
            Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-key'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${ProjectName}-${Environment}-db-key'
      TargetKeyId: !Ref DBKMSKey

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-${Environment}-db-subnet-group'
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-vpc-Private-Subnet-0-ID'
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-vpc-Private-Subnet-1-ID'
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-vpc-Private-Subnet-2-ID'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-${Environment}-db-sg'
      GroupDescription: Security group for RDS database
      VpcId: 
        Fn::ImportValue: !Sub '${ProjectName}-${Environment}-vpc-VPC-ID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub '${ProjectName}-${Environment}-app-App-SG-ID'
          Description: PostgreSQL from App instances
      SecurityGroupEgress: []
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-rds-monitoring-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-rds-monitoring-role'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub '${ProjectName}-${Environment}-postgres-params'
      Description: !Sub 'Parameter group for ${ProjectName}-${Environment} PostgreSQL'
      Family: postgres15
      Parameters:
        shared_preload_libraries: pg_stat_statements
        log_statement: all
        log_min_duration_statement: 1000
        log_rotation_age: 1440
        log_rotation_size: 102400
        rds.force_ssl: 1
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-postgres-params'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: !If [IsProd, Snapshot, Delete]
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-db'
      DBInstanceClass: !Ref DBInstanceType
      Engine: postgres
      EngineVersion: '15.8'
      DBName: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: !Ref AllocatedStorage
      StorageType: gp3
      StorageEncrypted: true
      KmsKeyId: !Ref DBKMSKey
      MultiAZ: true
      BackupRetentionPeriod: !If [IsProd, 30, !Ref BackupRetentionPeriod]
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      DeleteAutomatedBackups: false
      DeletionProtection: !If [IsProd, true, false]
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBParameterGroupName: !Ref DBParameterGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      EnableIAMDatabaseAuthentication: true
      EnablePerformanceInsights: !If [IsProd, true, false]
      PerformanceInsightsRetentionPeriod: !If [IsProd, 731, !Ref 'AWS::NoValue']
      PerformanceInsightsKMSKeyId: !If [IsProd, !Ref DBKMSKey, !Ref 'AWS::NoValue']
      EnableCloudwatchLogsExports:
        - postgresql
      AssociatedRoles: []
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-db-cpu-high'
      AlarmDescription: Database high CPU utilization
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

  DBConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-db-connections-high'
      AlarmDescription: Database high connection count
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance
      TreatMissingData: notBreaching

Outputs:
  DBInstanceId:
    Description: RDS Database Instance ID
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::StackName}-DB-Instance-ID'

  DBEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-DB-Endpoint'

  DBPort:
    Description: RDS Database Port
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-DB-Port'

  DBSecurityGroupId:
    Description: Database Security Group ID
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-DB-SG-ID'

  DBSubnetGroupName:
    Description: Database Subnet Group Name
    Value: !Ref DBSubnetGroup
    Export:
      Name: !Sub '${AWS::StackName}-DB-SubnetGroup-Name'